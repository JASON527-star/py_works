'''
元组
元组内数据不支持更改，但元组里的列表元素可以更改
'''
# t1=('hello',66,-20,3.66,[10,20,30])
# t2=['hello',66,-20,3.66,[10,20,30]]
# print(t1[::-1])
# print(t2[1:4])
#元组内数据不支持更改，但元组里的列表元素可以更改
# a=(1,2,3,4)
#b=[10,20,30,40]
# c='123abc456'
# print(max(c)) #AScii
#print(b*3) #[10, 20, 30, 40, 10, 20, 30, 40, 10, 20, 30, 40]
# c=(10)
#d=(10,)
#e=10,20,30,40
#print(c*10)  #100
# print(d*10) #(10, 10, 10, 10, 10, 10, 10, 10, 10, 10)
# print(e)

'''
集合
使用大括号 {} 或者 set() 函数创建集合
{}创建只能填字符串/元组/数字，列表/字典不可以
'''
# a=set('1234')
# print(a) #{'1', '2', '3', '4'}
# b=set([10,20,30])
# print(b) #{10, 20, 30}
# c=set((1,2,3,4))
# print(c) #{1, 2, 3, 4}
# d={
#     '年龄':18,
#     '名字':'哈哈哈'
# }
# f=set(d)
# print(f)

# p1=set([1,2,3,3,3])
# print(p1) #{1, 2, 3}
# p2=set((1,2,3,4,3))
# print(p2) #{1, 2, 3, 4}
# p3={
#      '年龄':18,
#      '名字':'哈哈哈',
#      '年龄':18
# }
# print(set(p3)) #{'年龄', '名字'}
# p4='zzzz'
# print(set(p4)) #{'z'}
# p5={1,2,3,4,3,(3333,221,221,3333)}
# print(p5)

'''
    集合添加元素
    1、add():数字/字符串/元组
    2、update:集合合并
'''

# a={1,2,3}
# #a.add(4) #{1, 2, 3, 4}
# a.add('hhhhh')
# # b=(1,2,3)
# # b+=(4,)
# # print(a) #{1, 2, 3, 'hhhhh'}
# # print(b) #(1, 2, 3, 4)
# a1={'w','a','v'}
# a.update(a1)
# print(a) #{1, 2, 3, 'w', 'hhhhh', 'a', 'v'}

'''
集合操作
remove  集合存在就删除，没有报错
pop 随机删除 集合不存在报错
discard 集合存在就删除，没有不做任何操作
'''

#a={'python','学','慕洲'}
# a.remove('学')
# print(a)
# a.pop()
# print(a)
#a.discard('122')
#print(a)  #{'学', '慕洲', 'python'}

'''
集合的交集和并集
'''
# s1={1,2,3}
# s2={4,5,6,3}
# s3=s1 & s2
# s4=s1 | s2
# print(s3)
# print(s4)

'''
  字典 元素为键值对 {}/dict()
  键为不可变类型 元组/字符串/数字
'''
# a={
#     '姓名':'慕洲',
#     '年龄':18,
#     1:22,
#     (1,2,3):'sda'
# }
# b=dict((['年龄','18'],['名字','慕洲']))
# f=dict(年龄='18',名字='慕洲') #{'年龄': '18', '名字': '慕洲'}
# print(a)
# print(b)
#
# c={}
# d=set()
# print(c)
# print(d)

'''
字典操作
增加、删除
修改、查找
'''

#d={'年龄': '18', '名字': '慕洲'}
# d['技能']='python技能'  #增加操作 中括号
# del d['技能'] #删除操作
# d['名字']='heiah' #修改操作
#print(d['名字']) #查找

'''
字典操作方法
    get函数
    
    keys函数
'''

# d={'年龄': '18', '名字': '慕洲'}
# r=d.get('名字') #没有返回None
# r1=d.get('技能')
# r2=d.get('技能','shenme') #赋一个默认的值
# print(r2)

#
# f={'年龄': '18',
#    '名字': '慕洲',
#    '技能':{
#     "技能1":'C',
# "技能2":'python'
# }
#    }
# print(f.keys())

'''
   items函数：以列表形式返回键值对
   values函数: 以列表形式返回所有值
'''

# d={'年龄': '18',
#    '名字': '慕洲'}
# print(d.items()) #dict_items([('年龄', '18'), ('名字', '慕洲')])
# print(d.values()) #dict_values(['18', '慕洲'])

# f=dict(年龄='18',名字='慕洲')
# print(f)

'''
clear:
copy:
'''

#d={'年龄': '18',  '名字': '慕洲'}
#d1=d.copy()
# print(d1)
# d.clear()
# print(d)
# print(len(d))

# del d['名字']
# print(d)
# print(d1)

'''
fromkeys:创建一个新的字典
第一个参数(列表/元组/集合)，用作键
第二个参数(任何数据类型)，作为值

pop函数:移除指定键
'''

#d={'年龄': '18',  '名字': '慕洲'}
# d={}
# d1=d.fromkeys({'name','age'},('慕洲',18)) #{'name': ('慕洲', 18), 'age': ('慕洲', 18)}
# print(d1)
#
# r=d1.pop('name')
# print(r)
# print(d1)

'''
popitem 函数: 删除最后一项
setdefault 函数： 设置键的默认值 
                键已存在则忽略设置，仍输出原先键值
                不存在则添加
'''
#
# d={'年龄': '18',  '名字': '慕洲'}
# r=d.popitem()
# print(r) #('名字', '慕洲')
# print(d)
# 字典中的键不能重复，否则只显示重复的最后一条
# d2={'年龄': '18',  '名字': '慕洲'}
# d2.setdefault('年龄','333')
# print(d2) #{'年龄': '18', '名字': '慕洲'}

'''
update
有相同键则覆盖
'''

# d1={'名字':'Jason'}
# d2={'年龄':18}
# d3={'名字':'Jay'}
# d1.update(d2)
# d1.update(d3)
# print(d1)

'''
成员检测和标识号检测
  使用in 和 not in 判断某个对象是否为序列的成员
  in ： 判断对象是否在序列(元组/列表/字符串/数字) 是返回True
  not in ：
'''

# print('5'in'345')
# print('2'in '456')
# print(5 in [345,5,3])
# print('名字' in {'名字':'Jason','性别':'男'}or'性别'in {'名字':'Jason','性别':'男'})

'''
判断两个对象是否相同，用is和is not  (数字/字符串/元组 表面一样，完全一样，列表/字典/集合不一定)
数字/字符串/元组 不可变的数据类型
列表/字典/集合 可变数据类型
'''
# a=[1,2,3]
# b=[2,3,4]
# print(a is not b)
#
# f=[1]
# g=[1]
# print(f is g)

# aa={'名字':'哈哈哈哈'}
# bb={'名字':'哈哈哈哈'}
# print(aa is bb)

'''
数据类型转换 
'''
#自动类型转换
# a=10
# b=True
# print(a+b)
# c=10
# d=3.21
# print(c+d)
#强制类型转换

# a='123'
# b=123
# c=[1,2,3]
# d=(1,2,3)
# e={'kk':'sdf'}
# f=set([1,2,3])
# print(a)
# print(type(a))
# print(type(b))
# print(type(c))
# print(type(d))
# print(type(e))
# print(type(f))

# a1='123'
# print(type(str(a1)))

